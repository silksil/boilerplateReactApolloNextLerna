{"ast":null,"code":"import withApollo from \"next-with-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { endpoint, prodEndpoint } from \"../config\";\nimport { LOCAL_STATE_QUERY } from \"../components/Wrapper/testLocalState\";\n\nfunction createClient(_ref) {\n  var headers = _ref.headers;\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === \"development\" ? endpoint : prodEndpoint,\n    request: function request(operation) {\n      operation.setContext({\n        fetchOptions: {\n          credentials: \"include\"\n        },\n        headers: headers\n      });\n    },\n    // local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleButton: function toggleButton(_, variables, _ref2) {\n            var cache = _ref2.cache;\n\n            var _cache$readQuery = cache.readQuery({\n              query: LOCAL_STATE_QUERY\n            }),\n                buttonOpen = _cache$readQuery.buttonOpen;\n\n            var data = {\n              data: {\n                buttonOpen: !buttonOpen\n              }\n            };\n            cache.writeData(data);\n            return data;\n          }\n        }\n      },\n      defaults: {\n        buttonOpen: false\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);","map":{"version":3,"sources":["/Users/sil.kreulen/Desktop/Projects/other/boilerplateReactApolloNextLerna/projects/app/lib/withApollo.js"],"names":["withApollo","ApolloClient","endpoint","prodEndpoint","LOCAL_STATE_QUERY","createClient","headers","uri","process","env","NODE_ENV","request","operation","setContext","fetchOptions","credentials","clientState","resolvers","Mutation","toggleButton","_","variables","cache","readQuery","query","buttonOpen","data","writeData","defaults"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,WAAvC;AACA,SAASC,iBAAT,QAAkC,sCAAlC;;AAEA,SAASC,YAAT,OAAmC;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACjC,SAAO,IAAIL,YAAJ,CAAiB;AACtBM,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCR,QAAzC,GAAoDC,YADnC;AAEtBQ,IAAAA,OAAO,EAAE,iBAAAC,SAAS,EAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBT,QAAAA,OAAO,EAAPA;AAJmB,OAArB;AAMD,KATqB;AAUtB;AACAU,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,YADQ,wBACKC,CADL,EACQC,SADR,SAC8B;AAAA,gBAATC,KAAS,SAATA,KAAS;;AAAA,mCACbA,KAAK,CAACC,SAAN,CAAgB;AACrCC,cAAAA,KAAK,EAAEpB;AAD8B,aAAhB,CADa;AAAA,gBAC5BqB,UAD4B,oBAC5BA,UAD4B;;AAIpC,gBAAMC,IAAI,GAAG;AACXA,cAAAA,IAAI,EAAE;AAAED,gBAAAA,UAAU,EAAE,CAACA;AAAf;AADK,aAAb;AAGAH,YAAAA,KAAK,CAACK,SAAN,CAAgBD,IAAhB;AACA,mBAAOA,IAAP;AACD;AAVO;AADD,OADA;AAeXE,MAAAA,QAAQ,EAAE;AACRH,QAAAA,UAAU,EAAE;AADJ;AAfC;AAXS,GAAjB,CAAP;AA+BD;;AAED,eAAezB,UAAU,CAACK,YAAD,CAAzB","sourcesContent":["import withApollo from \"next-with-apollo\";\nimport ApolloClient from \"apollo-boost\";\nimport { endpoint, prodEndpoint } from \"../config\";\nimport { LOCAL_STATE_QUERY } from \"../components/Wrapper/testLocalState\";\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === \"development\" ? endpoint : prodEndpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: \"include\"\n        },\n        headers\n      });\n    },\n    // local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleButton(_, variables, { cache }) {\n            const { buttonOpen } = cache.readQuery({\n              query: LOCAL_STATE_QUERY\n            });\n            const data = {\n              data: { buttonOpen: !buttonOpen }\n            };\n            cache.writeData(data);\n            return data;\n          }\n        }\n      },\n      defaults: {\n        buttonOpen: false\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);\n"]},"metadata":{},"sourceType":"module"}